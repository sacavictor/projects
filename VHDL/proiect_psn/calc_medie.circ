<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="width" val="3"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="radix" val="10unsigned"/>
      <a name="width" val="8"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(250,230)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(290,40)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="radix" val="10unsigned"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(470,230)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="radix" val="10unsigned"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(70,40)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(70,60)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(70,80)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp loc="(290,40)" name="gen_nr_mx">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(470,230)" name="medii_RAM_ROM">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
  </circuit>
  <vhdl name="shift_medie">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;use ieee.numeric_std.all;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY shift_medie IS&#13;
  PORT (&#13;	suma: in std_logic_vector(7 downto 0);
  		sel: in std_logic_vector(2 downto 0);
  		clk: in std_logic;
  		media: out std_logic_vector(7 downto 0)
  );&#13;
END shift_medie;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE arch_shift_medie OF shift_medie IS&#13;
&#13;
BEGIN&#13;
&#13;process(sel, suma, clk)
begin
	if(rising_edge(clk)) then 
		if(sel = "000") then 
			media &lt;= "00000000";
		end if;
		
		if(sel = "100") then
			media &lt;= "0" &amp; suma(7 downto 1);
		end if;

		if(sel = "101") then
			media &lt;= "00" &amp; suma(7 downto 2);
		end if;

		if(sel = "110") then 
			media &lt;= "000" &amp; suma(7 downto 3);
		end if;

		if(sel = "111") then
			media &lt;= "0000" &amp; suma(7 downto 4);
		end if;
	end if;
end process;
&#13;
END arch_shift_medie;&#13;
</vhdl>
  <vhdl name="MUX">LIBRARY ieee;
USE ieee.std_logic_1164.all;
entity MUX is
	port(I1, I2: in std_logic_vector(7 downto 0);
		sel: in std_logic_vector(2 downto 0);
		O: out std_logic_vector(7 downto 0)
	);
end MUX;

architecture arch_MUX of MUX is
signal O_aux: std_logic_vector(7 downto 0);
begin
	process(sel,I1,I2)
	begin
		if(sel = "110") then
			O_aux &lt;= I1;

		elsif(sel = "111") then
			O_aux &lt;= I2;
		else O_aux &lt;= "00000000";
		end if;

	end process;
	O &lt;= O_aux;
end arch_MUX;</vhdl>
  <vhdl name="gen_nr_pseudo">LIBRARY ieee;
USE ieee.std_logic_1164.all;

USE ieee.numeric_std.all;
ENTITY gen_nr_pseudo IS
  PORT (
  	clk: in std_logic;
  	sel: in std_logic_vector(2 downto 0);
  	ies1: out std_logic_vector(7 downto 0);
  	ies2: out std_logic_vector(7 downto 0)
    );
END gen_nr_pseudo;


ARCHITECTURE arch_gen_nr_pseudo OF gen_nr_pseudo IS

BEGIN
	
	process(clk)
	
	variable ies_aux_1: std_logic_vector(7 downto 0) :="00001111";
	variable ies_aux_2: std_logic_vector(7 downto 0):="11111111";
	variable s1: std_logic;
	variable s2: std_logic;
	
	begin
	s1:=ies_aux_1(3) xor ies_aux_1(0);
	s2:=ies_aux_2(7) xor ies_aux_2(0);
	
	if(sel = "110") then 
		s1 :=ies_aux_1(3) xor ies_aux_1(0);
		if(rising_edge(clk)) then
			ies_aux_1 :="0000" &amp; ies_aux_1(2 downto 0) &amp; s1;
		end if;
	
		ies1 &lt;= ies_aux_1;
		ies2 &lt;= "00000000";
	end if;

	if(sel = "111") then 
		s2 :=ies_aux_2(7) xor ies_aux_2(0);
		if(rising_edge(clk)) then
			ies_aux_2 := ies_aux_2(6 downto 0) &amp; s2;
		end if;

		ies1 &lt;= "00001111";
		ies2 &lt;= ies_aux_2;
	end if;
	end process;

END arch_gen_nr_pseudo;</vhdl>
  <vhdl name="gen_nr_mx">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
ENTITY gen_nr_mx is
	PORT(
	clk,reset: in std_logic;
	sel: in std_logic_vector(2 downto 0);
	O:out std_logic_vector(7 downto 0)
	);
end gen_nr_mx;

architecture ARH of gen_nr_mx is

	component MX is
	port(I1, I2: in std_logic_vector(7 downto 0);
		sel: in std_logic_vector(2 downto 0);
		O: out std_logic_vector(7 downto 0)
		);
	end component;

	component gen_nr is
	PORT(clk: in std_logic;
  		sel: in std_logic_vector(2 downto 0);
  		ies1: out std_logic_vector(7 downto 0);
  		ies2: out std_logic_vector(7 downto 0)
    	);
   	end component;

	signal i1, i2: std_logic_vector(7 downto 0);
	
	begin
	pas1: gen_nr port map(clk, sel, i1, i2);
	pas2: MX port map(i1, i2, sel, O);
	
end architecture ARH;



LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
ENTITY gen_nr IS
  PORT(
  	clk: in std_logic;
  	sel: in std_logic_vector(2 downto 0);
  	ies1: out std_logic_vector(7 downto 0);
  	ies2: out std_logic_vector(7 downto 0)
    );
END gen_nr;


ARCHITECTURE arch_gen_nr OF gen_nr IS
BEGIN
	process(clk)
	
	variable ies_aux_1: std_logic_vector(7 downto 0) :="00001111";
	variable ies_aux_2: std_logic_vector(7 downto 0):="11111111";
	variable s1: std_logic;
	variable s2: std_logic;
	
	begin

	s1:=ies_aux_1(3) xor ies_aux_1(0);
	s2:=ies_aux_2(7) xor ies_aux_2(0);
	
	if(sel = "110") then 
		s1 :=ies_aux_1(3) xor ies_aux_1(0);
		if(rising_edge(clk)) then
			ies_aux_1 :="0000" &amp; ies_aux_1(2 downto 0) &amp; s1;
		end if;
	
		ies1 &lt;= ies_aux_1;
		ies2 &lt;= "00000000";
	end if;

	if(sel = "111") then 
		s2 :=ies_aux_2(7) xor ies_aux_2(0);
		if(rising_edge(clk)) then
			ies_aux_2 := ies_aux_2(6 downto 0) &amp; s2;
		end if;

		ies1 &lt;= "00001111";
		ies2 &lt;= ies_aux_2;
	end if;
	end process;

END arch_gen_nr;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
entity MX is
	port(I1, I2: in std_logic_vector(7 downto 0);
		sel: in std_logic_vector(2 downto 0);
		O: out std_logic_vector(7 downto 0)
	);
end MX;

architecture arch_MUX of MX is
signal O_aux: std_logic_vector(7 downto 0);
begin
	process(sel,I1,I2)
	begin
		if(sel = "110") then
			O_aux &lt;= I1;

		elsif(sel = "111") then
			O_aux &lt;= I2;
		else O_aux &lt;= "00000000";
		end if;

	end process;
	O &lt;= O_aux;
end arch_MUX;</vhdl>
  <vhdl name="medii_RAM_ROM">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_arith.all;
use ieee.numeric_std.all;
ENTITY medii_RAM_ROM IS&#13;
  PORT (&#13;sel: in std_logic_vector(2 downto 0);
  	   O: out std_logic_vector(7 downto 0)
  );&#13;
END medii_RAM_ROM;&#13;

ARCHITECTURE arch_medii_RAM_ROM OF medii_RAM_ROM IS&#13;
&#13;	type MATRICE is array (0 to 5) of std_logic_vector(7 downto 0);
BEGIN&#13;
&#13;	process(sel)

		variable mem_1: MATRICE := ("00110110","10100100","10100010","01011011","01101000","00010101");
		variable mem_2: MATRICE := ("11001001","01011011","01011101","10100100","10010111","11101010");
		variable sum: natural;
		
	begin
		if(sel = "010") then
			sum:=0;
			for i in 0 to 5 loop
				sum := sum + conv_integer(mem_1(i));
			end loop;
			sum := sum / 6;
		end if;

		if(sel ="011") then
			sum:=0;
			for i in 0 to 5 loop
				sum := sum + conv_integer(mem_2(i));
			end loop;
			sum := sum / 6;
		end if;

		O &lt;= std_logic_vector(TO_UNSIGNED(sum, 8));
		
	end process;
	

END arch_medii_RAM_ROM;&#13;
</vhdl>
</project>
